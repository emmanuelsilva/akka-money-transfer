akka {
  loglevel = INFO
  log-dead-letters = off

  actor {
    provider = "cluster"

    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "br.com.emmanuel.moneytransfer.infrastructure.serialization.SerializableMessage" = jackson-cbor
    }
  }

  cluster {
    min-nr-of-members = 1
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 100
    }
  }

  coordinated-shutdown {
    exit-jvm = on
    default-phase-timeout = 10 seconds
  }

  discovery {
    method = kubernetes-api
    kubernetes-api {
      pod-namespace = "ledger"
      pod-label-selector = "app=%s"
    }
  }

  management {
    contact-point {
      fallback-port = 8558
    }

    cluster.bootstrap {
      contact-point-discovery {
        required-contact-point-nr = 1
        stable-margin = 5 seconds
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    artery {
      enabled   = on
      transport = tcp
      canonical.port = 2551
    }
  }

  persistence {
    # inmem only for tests
    journal.plugin = "akka.persistence.journal.inmem"
    #snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    #snapshot-store.local.dir = "target/snapshot"
  }
}